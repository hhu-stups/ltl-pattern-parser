apply plugin: 'antlr'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'signing'

project.group = 'de.hhu.stups'
project.version = '0.2.1-SNAPSHOT'

final isSnapshot = project.version.endsWith("-SNAPSHOT")

repositories {
	mavenCentral()
	if (isSnapshot) {
		maven {
			name "snapshots"
			url "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
}

dependencies {
	def antlrVersion = "4.11.1" // With 4.12.0, the build can't find the ANTLR-generated classes for some reason
	def parserVersion = "2.12.4"

	antlr group: "org.antlr", name: "antlr4", version: antlrVersion
	api group: "org.antlr", name: "antlr4-runtime", version: antlrVersion
	api group: "de.hhu.stups", name: "parserbase", version: parserVersion
	api group: "de.hhu.stups", name: "prologlib", version: parserVersion

	testImplementation group: "de.hhu.stups", name: "ltlparser", version: parserVersion
	testImplementation group: "junit", name: "junit", version: "4.13.2"
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
	
	withSourcesJar()
	withJavadocJar()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			pom {
				name = 'LTL Pattern DSL Parser'
				description = 'Parser for a LTL Pattern DSL'
				url = 'https://gitlab.cs.uni-duesseldorf.de/stups/prob/ltl-pattern-parser'

				licenses {
					license {
						name = 'Eclipse Public License, Version 1.0'
						url = 'https://www.eclipse.org/legal/epl-v10.html'
					}
				}
				scm {
					connection = 'scm:git:git://gitlab.cs.uni-duesseldorf.de/stups/prob/ltl-pattern-parser.git'
					developerConnection = 'scm:git:git@gitlab.cs.uni-duesseldorf.de/stups/prob/ltl-pattern-parser.git'
					url = 'https://gitlab.cs.uni-duesseldorf.de/stups/prob/ltl-pattern-parser'
				}


				developers {
					developer {
						id = 'bendisposto'
						name = 'Jens Bendisposto'
						email = 'jens@bendisposto.de'
					}
				}
			}
		}
	}

	repositories {
		maven {
			final releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
			final snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
			url isSnapshot ? snapshotsRepoUrl : releasesRepoUrl
			if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
				credentials {
					username project.ossrhUsername
					password project.ossrhPassword
				}
			}
		}
	}
}

ext."signing.secretKeyRingFile" = rootProject.file("secring.gpg").absolutePath

signing {
	sign publishing.publications.mavenJava
}
